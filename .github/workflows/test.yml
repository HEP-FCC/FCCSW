name: linux

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SETUP: ["init_key4hep.sh", 'init_lcg.sh']
    steps:
    - uses: actions/checkout@v2
    - name: Install CVMFS
      run: |
        wget --no-check-certificate https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
        sudo dpkg -i cvmfs-release-latest_all.deb
        sudo apt-get update
        sudo apt-get install cvmfs cvmfs-config-default
        sudo cvmfs_config setup
        echo "CVMFS_QUOTA_LIMIT='32140'" > default.local
        echo "CVMFS_HTTP_PROXY=DIRECT" >> default.local
        echo "CVMFS_CACHE_BASE='/var/lib/cvmfs'" >> default.local
        echo "CVMFS_FORCE_SIGNING='yes'" >> default.local
        echo "CVMFS_FOLLOW_REDIRECTS='yes'" >> default.local
        echo "CVMFS_REPOSITORIES='sw.hsf.org,sw-nightlies.hsf.org,fcc.cern.ch,sft-nightlies.cern.ch,sft.cern.ch,geant4.cern.ch'" >> default.local
        echo "CVMFS_SEND_INFO_HEADER=no" >> default.local
        sudo mkdir -p /etc/cvmfs
        sudo mv default.local /etc/cvmfs/default.local
        sudo cvmfs_config probe
        ls /cvmfs/sft.cern.ch
        ls /cvmfs/fcc.cern.ch
        ls /cvmfs/geant4.cern.ch

    - name: Start container
      run: |
        docker run -it --name CI_container -v ${GITHUB_WORKSPACE}:/Package -v /cvmfs:/cvmfs:shared -d clicdp/cc7-lcg /bin/bash
    - name: Setup container
      run: |
        docker exec CI_container /bin/bash -c " ln -s /usr/lib64/liblzma.so.5.2.2 /usr/lib64/liblzma.so;"

    - name: CMake Configure
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package; mkdir -p build install; source ${{ matrix.SETUP }}; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=17  -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always " -G Ninja ..; '

    - name: Compile FCCSW
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package; source ${{ matrix.SETUP }}; cd build; ninja -k0;'

    - name: Install FCCSW
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package; source ${{ matrix.SETUP }}; cd build;  ninja -k0 install;'

    - name: Test FCCSW
      continue-on-error: ${{matrix.SETUP == 'init_key4hep.sh' }}
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package; source ${{ matrix.SETUP }}; cd build; ctest -j `getconf _NPROCESSORS_ONLN`;'
    - name: Upload Test Results for FCCSW
      uses: actions/upload-artifact@v2
      if:  success()  || failure()
      with:
        name: FCCSWCTestLog
        path: build/Testing/Temporary/LastTest.log




